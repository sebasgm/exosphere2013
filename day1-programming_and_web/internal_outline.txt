Using Python Console:

1- Open a terminal and write "python", if python is installed, then you wil get 
a python console which allows you to write code that will be executed (interpreted)
line by line.
    Then you can quicky test if you have particular modules installed, or the syntax
of a particular code structure that want to test.

2- Our first program will print "hello world", and as a sample of what we mean 
when we said that python is as simple as possible, let's try by writing:

    print "hello world" in the interpreter

3- Next we can do is to try some calculation:

    a = 2
    b = 8
    c = a + b
    print c

4- Could it be the same with any kind of "entity"?

    d = "hola"
    e = " mundo"
    print d + e

    # This is a nice feature of python. It allows us to treat strings as regular 
    #numbers, overloading the '+' operator's behavior

Executing Python scripts:

5- Now we can try writing the same "code" in a file, and executing it by just
typing on a terminal:

    python hello_world.py

6- Previous codes just print fixed msgs. But about interacting a litle bit?

    - Create a new file called user_msg.py
    - write in the file: 
                        print "Exercise 4: Interacting with the program"
                        value = raw_input('Please insert a msg to be printed"')
                        print value

    - Save the file
    - go to the terminal and type:

    python user_msg.py


Managing basic types:

6- Basic types: In python we have dynamic typing,which means that variables takes
    type of the value asigned.

    Some random asignations, just to test that fact.


7- Conditions and loops: Write a program that could change the program flow by doing some comparison

8- Using functions: Explain its importance and show how to encapsulate some functionality

9- Defining classes: Classes allows to encapsule even more the pieces of our code.
It is not just a matter encapsulating bunches of code as function does, it is more like
a different paradigm. So, a class is a particular structure capable of having methods 
(functions) and also attributs (variables).
    An instance of a class is called "object", and the object contains, knows, and/or 
can access to any method and attribute that were defined on the correspoding class.




(N-3)- Importing modules, without going deep in details. Just mentioning that a Python 
module is the a package that includes extra functionality comming from src code already
written.

(N-2)- Open files, read and write data. (Maybe generated with Excel as csv)

(N-1)- Plot graphics using matplotlib or a similar library

N- Get the facebook counter of a given page (just to have "web" fun, hehe)


